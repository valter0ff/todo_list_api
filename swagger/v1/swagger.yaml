---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/tasks/{task_id}/comments":
    get:
      summary: Task comments index
      tags:
      - Comment
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        description: Access token
        schema:
          type: string
      - name: task_id
        in: path
        schema:
          type: integer
          example: 87
        required: true
      responses:
        '200':
          description: Task comments returned
          content:
            application/json:
              example:
                data:
                - id: '201'
                  type: comment
                  attributes:
                    body: Felice Padberg
                    created_at: '2022-07-23T12:11:21.429+03:00'
                    updated_at: '2022-07-23T12:11:21.429+03:00'
                - id: '202'
                  type: comment
                  attributes:
                    body: Heide Miller
                    created_at: '2022-07-23T12:11:21.433+03:00'
                    updated_at: '2022-07-23T12:11:21.433+03:00'
        '404':
          description: Invalid task id
        '401':
          description: Invalid token
    post:
      summary: Create comment
      tags:
      - Comment
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        description: Access token
        schema:
          type: string
      - name: task_id
        in: path
        schema:
          type: integer
          example: 41
        required: true
      responses:
        '201':
          description: Comment is created
          content:
            application/json:
              example:
                data:
                  id: '207'
                  type: comment
                  attributes:
                    body: Annemarie Heller
                    created_at: '2022-07-23T12:11:21.913+03:00'
                    updated_at: '2022-07-23T12:11:21.913+03:00'
        '422':
          description: Invalid comment body
          content:
            application/json:
              example:
                errors:
                  body:
                  - must be filled
        '404':
          description: Invalid task id
        '401':
          description: Invalid token
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - comment
              properties:
                body:
                  type: string
                  example: Dane Rogahn
  "/api/v1/comments/{id}":
    delete:
      summary: Delete comment
      tags:
      - Comment
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        description: Access token
        schema:
          type: string
      - name: id
        in: path
        schema:
          type: integer
          example: 73
        required: true
      responses:
        '204':
          description: Comment destroyed
        '404':
          description: Invalid comment id
        '401':
          description: Invalid token
  "/api/v1/current_user":
    get:
      summary: Show current user
      tags:
      - Current user
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        description: Access token
        schema:
          type: string
      responses:
        '200':
          description: Current user is returned
          content:
            application/json:
              example:
                data:
                  id: '1199'
                  type: user
                  attributes:
                    username: Shira Streich
                    created_at: '2022-07-23T12:11:22.353+03:00'
                    updated_at: '2022-07-23T12:11:22.353+03:00'
                  relationships:
                    projects:
                      data: []
        '401':
          description: Invalid token
  "/api/v1/projects":
    post:
      summary: Create project
      tags:
      - Project
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        description: Access token
        schema:
          type: string
      responses:
        '201':
          description: Project is created
          content:
            application/json:
              example:
                data:
                  id: '850'
                  type: project
                  attributes:
                    title: asperiores
                    created_at: '2022-07-23T12:11:22.519+03:00'
                    updated_at: '2022-07-23T12:11:22.519+03:00'
        '422':
          description: Project title already exists
          content:
            application/json:
              example:
                errors:
                  title:
                  - The project with such name does already exist.
        '401':
          description: Invalid token
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - project
              properties:
                title:
                  type: string
                  example: quia
  "/api/v1/projects/{id}":
    put:
      summary: Update project
      tags:
      - Project
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        description: Access token
        schema:
          type: string
      - name: id
        in: path
        schema:
          type: integer
          example: 86
        required: true
      responses:
        '200':
          description: Project is updated
          content:
            application/json:
              example:
                data:
                  id: '853'
                  type: project
                  attributes:
                    title: Sommer Schumm
                    created_at: '2022-07-23T12:11:22.946+03:00'
                    updated_at: '2022-07-23T12:11:22.982+03:00'
        '404':
          description: Invalid id
        '422':
          description: Project title already exists
          content:
            application/json:
              example:
                errors:
                  title:
                  - The project with such name does already exist.
        '401':
          description: Invalid token
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - project
              properties:
                title:
                  type: string
                  example: autem
    delete:
      summary: Destroy project
      tags:
      - Project
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        description: Access token
        schema:
          type: string
      - name: id
        in: path
        schema:
          type: integer
          example: 70
        required: true
      responses:
        '204':
          description: Project is destroyed
        '404':
          description: Invalid id
        '401':
          description: Invalid token
  "/api/v1/session":
    post:
      summary: Create session
      tags:
      - Sessions
      security:
      - Bearer: {}
      parameters: []
      responses:
        '201':
          description: Session is created
          content:
            application/json:
              example:
                data:
                  id: '1209'
                  type: user
                  attributes:
                    username: Leonila Daugherty
                    created_at: '2022-07-23T12:11:23.308+03:00'
                    updated_at: '2022-07-23T12:11:23.308+03:00'
                  relationships:
                    projects:
                      data:
                      - id: '857'
                        type: project
                      - id: '858'
                        type: project
                meta:
                  csrf: RHJ4NeNLFgdfncJhp7Dz3UILNh2r69JJpyQGzQtWRkHhussvCIzcxV5X84NwbWtt1v/3fcRozs9AfAx+TKsWyw==
                  access: eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2NTg2MDM0ODMsInVzZXJfaWQiOjEyMDksInVpZCI6IjNlMGFmOTU2LTE0ZGYtNDFmYS04NTNlLTQ1ZThjOGU3MzkyZCIsInJ1aWQiOiI2MzA3OWU0Ni0zNWFjLTQzYzktYjEwNy0zZWQ1ODRkZTUwYTMifQ.HKcOzj5zHuIbWwughvlHpYVubaAgUQ5CYKH4V89_1fM
                  access_expires_at: '2022-07-23T22:11:23.000+03:00'
                  refresh: eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2NTkxNzIyODMsInVpZCI6IjYzMDc5ZTQ2LTM1YWMtNDNjOS1iMTA3LTNlZDU4NGRlNTBhMyJ9.jqHMQEm3fbnwuN1r67M8fRdVDDIx5Yq5F6j5o6JT1pM
                  refresh_expires_at: '2022-07-30T12:11:23.000+03:00'
                included:
                - id: '857'
                  type: project
                  attributes:
                    title: Harland Hoeger
                    created_at: '2022-07-23T12:11:23.313+03:00'
                    updated_at: '2022-07-23T12:11:23.313+03:00'
                - id: '858'
                  type: project
                  attributes:
                    title: Bradford Mitchell
                    created_at: '2022-07-23T12:11:23.319+03:00'
                    updated_at: '2022-07-23T12:11:23.319+03:00'
        '404':
          description: Not found
        '401':
          description: Invalid credentials
          content:
            application/json:
              example:
                errors:
                  base: Incorrect login or(and) password
        '422':
          description: Blank username and password
          content:
            application/json:
              example:
                errors:
                  username:
                  - The field is required.
                  password:
                  - The field is required.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - username
              - password
              properties:
                username:
                  type: string
                  example: cleora_lebsackxx
                password:
                  type: string
                  example: qwerty12
    delete:
      summary: Destroys session
      tags:
      - Sessions
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        description: Access token
        schema:
          type: string
      responses:
        '204':
          description: Session is destroyed
        '401':
          description: Invalid token
  "/api/v1/projects/{project_id}/tasks":
    get:
      summary: Project tasks index
      tags:
      - Task
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        description: Access token
        schema:
          type: string
      - name: project_id
        in: path
        schema:
          type: integer
          example: 75
        required: true
      responses:
        '200':
          description: Project tasks returned
          content:
            application/json:
              example:
                data:
                - id: '721'
                  type: task
                  attributes:
                    name: error
                    created_at: '2022-07-23T12:11:23.637+03:00'
                    updated_at: '2022-07-23T12:11:23.637+03:00'
                    status: active
                    position: 1
                    deadline_date: 25/07/2022
                    deadline_time: '00:00'
                - id: '722'
                  type: task
                  attributes:
                    name: maxime
                    created_at: '2022-07-23T12:11:23.643+03:00'
                    updated_at: '2022-07-23T12:11:23.643+03:00'
                    status: active
                    position: 2
                    deadline_date: 25/07/2022
                    deadline_time: '00:00'
        '404':
          description: Invalid project id
    post:
      summary: Create task
      tags:
      - Task
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        description: Access token
        schema:
          type: string
      - name: project_id
        in: path
        schema:
          type: integer
          example: 81
        required: true
      responses:
        '201':
          description: Task is created
          content:
            application/json:
              example:
                data:
                  id: '723'
                  type: task
                  attributes:
                    name: Nanci Dooley
                    created_at: '2022-07-23T12:11:23.836+03:00'
                    updated_at: '2022-07-23T12:11:23.836+03:00'
                    status: active
                    position: 1
        '422':
          description: Invalid task name
          content:
            application/json:
              example:
                errors:
                  name:
                  - The field is required.
        '404':
          description: Invalid project id
        '401':
          description: Invalid token
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - task
              properties:
                name:
                  type: string
                  example: ipsa
  "/api/v1/tasks/{id}/is_done":
    put:
      summary: Update task status
      tags:
      - Task
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        description: Access token
        schema:
          type: string
      - name: id
        in: path
        schema:
          type: integer
          example: 98
        required: true
      responses:
        '200':
          description: Task status changed
          content:
            application/json:
              example:
                data:
                  id: '724'
                  type: task
                  attributes:
                    name: quae
                    created_at: '2022-07-23T12:11:24.097+03:00'
                    updated_at: '2022-07-23T12:11:24.131+03:00'
                    status: is_done
                    position: 1
                    deadline_date: 25/07/2022
                    deadline_time: '00:00'
        '404':
          description: Invalid task id
  "/api/v1/tasks/{id}":
    put:
      summary: Update task
      tags:
      - Task
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        description: Access token
        schema:
          type: string
      - name: id
        in: path
        schema:
          type: integer
          example: 7
        required: true
      responses:
        '200':
          description: Task updated
          content:
            application/json:
              example:
                data:
                  id: '728'
                  type: task
                  attributes:
                    name: Shaquana Bode
                    created_at: '2022-07-23T12:11:24.289+03:00'
                    updated_at: '2022-07-23T12:11:24.351+03:00'
                    status: active
                    position: 49
                    deadline_date: 25/07/2022
                    deadline_time: '00:00'
        '404':
          description: Invalid task id
        '422':
          description: Task already completed
          content:
            application/json:
              example:
                errors:
                  position:
                  - must be filled
                  status:
                  - The task is done. You can`t edit completed task.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - task
              properties:
                name:
                  type: string
                  example: fugit
                position:
                  type: integer
                  example: 11
    delete:
      summary: Delete task
      tags:
      - Task
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        description: Access token
        schema:
          type: string
      - name: id
        in: path
        schema:
          type: integer
          example: 70
        required: true
      responses:
        '204':
          description: Task destroyed
        '404':
          description: Invalid task id
        '401':
          description: Invalid token
  "/api/v1/tasks/{id}/set_deadline":
    put:
      summary: Set task deadline
      tags:
      - Task
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        description: Access token
        schema:
          type: string
      - name: id
        in: path
        schema:
          type: integer
          example: 82
        required: true
      responses:
        '200':
          description: Task deadline updated
          content:
            application/json:
              example:
                data:
                  id: '735'
                  type: task
                  attributes:
                    name: repellendus
                    created_at: '2022-07-23T12:11:24.757+03:00'
                    updated_at: '2022-07-23T12:11:24.757+03:00'
                    status: active
                    position: 1
                    deadline_date: 25/07/2022
                    deadline_time: '00:00'
        '404':
          description: Invalid task id
        '422':
          description: Blank deadline parameter
          content:
            application/json:
              example:
                errors:
                  status:
                  - The task is done. You can`t edit completed task.
                  deadline:
                  - The field is required.
                  - Deadline cann`t be in past
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - task
              properties:
                deadline:
                  type: string
                  example: '2022-07-23T12:11:20+03:00'
  "/api/v1/user":
    post:
      summary: Create user
      tags:
      - User
      security:
      - Bearer: {}
      parameters: []
      responses:
        '201':
          description: Created
          content:
            application/json:
              example:
                data:
                  id: '1229'
                  type: user
                  attributes:
                    username: Latricia Dietrich
                    created_at: '2022-07-23T12:11:25.367+03:00'
                    updated_at: '2022-07-23T12:11:25.367+03:00'
                  relationships:
                    projects:
                      data: []
        '422':
          description: User name already exists
          content:
            application/json:
              example:
                errors:
                  username:
                  - This login is already registered. Please, log in.
                  password:
                  - The field is required.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - user
              properties:
                user:
                  type: object
                  required:
                  - username
                  - password
                  - password_confirmation
                  properties:
                    username:
                      type: string
                      example: tamixx
                    password:
                      type: string
                      example: qwerty12
                    password_confirmation:
                      type: string
                      example: qwerty12
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3000
