---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/tasks/{task_id}/comments":
    get:
      summary: Task comments index
      tags:
      - Comment
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        description: Access token
        schema:
          type: string
      - name: task_id
        in: path
        schema:
          type: integer
          example: 94
        required: true
      responses:
        '200':
          description: Task comments returned
          content:
            application/json:
              example:
                data:
                - id: '75'
                  type: comment
                  attributes:
                    body: Elaine Goodwin
                    created_at: '2022-07-23T23:29:59.858+03:00'
                    updated_at: '2022-07-23T23:29:59.858+03:00'
                - id: '76'
                  type: comment
                  attributes:
                    body: Stacie Anderson
                    created_at: '2022-07-23T23:29:59.862+03:00'
                    updated_at: '2022-07-23T23:29:59.862+03:00'
        '404':
          description: Invalid task id
        '401':
          description: Invalid token
    post:
      summary: Create comment
      tags:
      - Comment
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        description: Access token
        schema:
          type: string
      - name: task_id
        in: path
        schema:
          type: integer
          example: 64
        required: true
      responses:
        '201':
          description: Comment is created
          content:
            application/json:
              example:
                data:
                  id: '81'
                  type: comment
                  attributes:
                    body: Dreama Paucek
                    created_at: '2022-07-23T23:30:00.240+03:00'
                    updated_at: '2022-07-23T23:30:00.240+03:00'
        '422':
          description: Invalid comment body
          content:
            application/json:
              example:
                errors:
                  body:
                  - must be filled
        '404':
          description: Invalid task id
        '401':
          description: Invalid token
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - comment
              properties:
                body:
                  type: string
                  example: Bula Lynch
  "/api/v1/comments/{id}":
    delete:
      summary: Delete comment
      tags:
      - Comment
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        description: Access token
        schema:
          type: string
      - name: id
        in: path
        schema:
          type: integer
          example: 25
        required: true
      responses:
        '204':
          description: Comment destroyed
        '404':
          description: Invalid comment id
        '401':
          description: Invalid token
  "/api/v1/current_user":
    get:
      summary: Show current user
      tags:
      - Current user
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        description: Access token
        schema:
          type: string
      responses:
        '200':
          description: Current user is returned
          content:
            application/json:
              example:
                data:
                  id: '459'
                  type: user
                  attributes:
                    username: Merideth Crooks
                    created_at: '2022-07-23T23:30:00.707+03:00'
                    updated_at: '2022-07-23T23:30:00.707+03:00'
                  relationships:
                    projects:
                      data: []
        '401':
          description: Invalid token
  "/api/v1/projects":
    post:
      summary: Create project
      tags:
      - Project
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        description: Access token
        schema:
          type: string
      responses:
        '201':
          description: Project is created
          content:
            application/json:
              example:
                data:
                  id: '360'
                  type: project
                  attributes:
                    title: maxime
                    created_at: '2022-07-23T23:30:00.882+03:00'
                    updated_at: '2022-07-23T23:30:00.882+03:00'
        '422':
          description: Invalid parameters
          content:
            application/json:
              example:
                errors:
                  title:
                  - The project with such name does already exist.
        '401':
          description: Invalid token
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - project
              properties:
                title:
                  type: string
                  example: provident
  "/api/v1/projects/{id}":
    put:
      summary: Update project
      tags:
      - Project
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        description: Access token
        schema:
          type: string
      - name: id
        in: path
        schema:
          type: integer
          example: 52
        required: true
      responses:
        '200':
          description: Project is updated
          content:
            application/json:
              example:
                data:
                  id: '362'
                  type: project
                  attributes:
                    title: Alma Crist
                    created_at: '2022-07-23T23:30:01.211+03:00'
                    updated_at: '2022-07-23T23:30:01.246+03:00'
        '404':
          description: Invalid project id
        '422':
          description: Project title already exists
          content:
            application/json:
              example:
                errors:
                  title:
                  - The project with such name does already exist.
        '401':
          description: Invalid token
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - project
              properties:
                title:
                  type: string
                  example: accusantium
    delete:
      summary: Destroy project
      tags:
      - Project
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        description: Access token
        schema:
          type: string
      - name: id
        in: path
        schema:
          type: integer
          example: 53
        required: true
      responses:
        '204':
          description: Project is destroyed
        '404':
          description: Invalid id
        '401':
          description: Invalid token
  "/api/v1/session":
    post:
      summary: Create session
      tags:
      - Sessions
      security:
      - Bearer: {}
      parameters: []
      responses:
        '201':
          description: Session is created
          content:
            application/json:
              example:
                data:
                  id: '470'
                  type: user
                  attributes:
                    username: Carlee Collier
                    created_at: '2022-07-23T23:30:01.614+03:00'
                    updated_at: '2022-07-23T23:30:01.614+03:00'
                  relationships:
                    projects:
                      data:
                      - id: '368'
                        type: project
                      - id: '369'
                        type: project
                meta:
                  csrf: Z07XJoI0lWw1JUJiNM6vwUAsFSeFeuiN0wfcf8pS/jfkyA10dzzAdx8sncBEUcNG1la/e3QeAX8HkRhd1XU4yA==
                  access: eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2NTg2NDQyMDEsInVzZXJfaWQiOjQ3MCwidWlkIjoiOGM5ODBhMDUtYzA1ZS00ODBhLThlMzktYzQ5YTUxY2U4MDM0IiwicnVpZCI6IjhiYWI2MmNhLTM0ZjQtNDdlNy04MjNkLThkZTIzOTY2MDg0MyJ9.BBSw54auRevObn9ZQ_3i-leurMXFnzAvNsX5ntzC6S8
                  access_expires_at: '2022-07-24T09:30:01.000+03:00'
                  refresh: eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2NTkyMTMwMDEsInVpZCI6IjhiYWI2MmNhLTM0ZjQtNDdlNy04MjNkLThkZTIzOTY2MDg0MyJ9.xTWoXLY1u0ziF8Cf62MlqIU7aNJ-QzcK88A0ASBBg40
                  refresh_expires_at: '2022-07-30T23:30:01.000+03:00'
                included:
                - id: '368'
                  type: project
                  attributes:
                    title: Yee Boehm
                    created_at: '2022-07-23T23:30:01.620+03:00'
                    updated_at: '2022-07-23T23:30:01.620+03:00'
                - id: '369'
                  type: project
                  attributes:
                    title: Leta Johnston
                    created_at: '2022-07-23T23:30:01.625+03:00'
                    updated_at: '2022-07-23T23:30:01.625+03:00'
        '404':
          description: Not found
        '401':
          description: Invalid credentials
          content:
            application/json:
              example:
                errors:
                  base: Incorrect login or(and) password
        '422':
          description: Blank username and password
          content:
            application/json:
              example:
                errors:
                  username:
                  - The field is required.
                  password:
                  - The field is required.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - username
              - password
              properties:
                username:
                  type: string
                  example: denishaxx
                password:
                  type: string
                  example: qwerty12
    delete:
      summary: Destroys session
      tags:
      - Sessions
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        description: Access token
        schema:
          type: string
      responses:
        '204':
          description: Session is destroyed
        '401':
          description: Invalid token
  "/api/v1/projects/{project_id}/tasks":
    get:
      summary: Project tasks index
      tags:
      - Task
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        description: Access token
        schema:
          type: string
      - name: project_id
        in: path
        schema:
          type: integer
          example: 68
        required: true
      responses:
        '200':
          description: Project tasks returned
          content:
            application/json:
              example:
                data:
                - id: '318'
                  type: task
                  attributes:
                    name: error
                    created_at: '2022-07-23T23:30:01.954+03:00'
                    updated_at: '2022-07-23T23:30:01.954+03:00'
                    status: in_progress
                    position: 1
                    deadline_date: 25/07/2022
                    deadline_time: '00:00'
                - id: '319'
                  type: task
                  attributes:
                    name: tenetur
                    created_at: '2022-07-23T23:30:01.960+03:00'
                    updated_at: '2022-07-23T23:30:01.960+03:00'
                    status: in_progress
                    position: 2
                    deadline_date: 25/07/2022
                    deadline_time: '00:00'
        '404':
          description: Invalid project id
        '401':
          description: Invalid token
    post:
      summary: Create task
      tags:
      - Task
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        description: Access token
        schema:
          type: string
      - name: project_id
        in: path
        schema:
          type: integer
          example: 58
        required: true
      responses:
        '201':
          description: Task is created
          content:
            application/json:
              example:
                data:
                  id: '324'
                  type: task
                  attributes:
                    name: nemo
                    created_at: '2022-07-23T23:30:02.234+03:00'
                    updated_at: '2022-07-23T23:30:02.234+03:00'
                    status: in_progress
                    position: 3
        '422':
          description: Invalid task name
          content:
            application/json:
              example:
                errors:
                  name:
                  - The field is required.
        '404':
          description: Invalid project id
        '401':
          description: Invalid token
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - task
              properties:
                name:
                  type: string
                  example: nesciunt
  "/api/v1/tasks/{id}/is_done":
    put:
      summary: Update task status
      tags:
      - Task
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        description: Access token
        schema:
          type: string
      - name: id
        in: path
        schema:
          type: integer
          example: 13
        required: true
      responses:
        '200':
          description: Task status changed
          content:
            application/json:
              example:
                data:
                  id: '329'
                  type: task
                  attributes:
                    name: amet
                    created_at: '2022-07-23T23:30:02.576+03:00'
                    updated_at: '2022-07-23T23:30:02.614+03:00'
                    status: done
                    position: 1
                    deadline_date: 25/07/2022
                    deadline_time: '00:00'
        '404':
          description: Invalid task id
        '401':
          description: Invalid token
  "/api/v1/tasks/{id}":
    put:
      summary: Update task
      tags:
      - Task
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        description: Access token
        schema:
          type: string
      - name: id
        in: path
        schema:
          type: integer
          example: 50
        required: true
      responses:
        '200':
          description: Task updated
          content:
            application/json:
              example:
                data:
                  id: '335'
                  type: task
                  attributes:
                    name: Dean Borer
                    created_at: '2022-07-23T23:30:02.831+03:00'
                    updated_at: '2022-07-23T23:30:02.895+03:00'
                    status: in_progress
                    position: 10
                    deadline_date: 25/07/2022
                    deadline_time: '00:00'
        '404':
          description: Invalid task id
        '422':
          description: Invalid parameters
          content:
            application/json:
              example:
                errors:
                  position:
                  - must be filled
                  status:
                  - The task is done. You can`t edit completed task.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - task
              properties:
                name:
                  type: string
                  example: pariatur
                position:
                  type: integer
                  example: 69
    delete:
      summary: Delete task
      tags:
      - Task
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        description: Access token
        schema:
          type: string
      - name: id
        in: path
        schema:
          type: integer
          example: 81
        required: true
      responses:
        '204':
          description: Task destroyed
        '404':
          description: Invalid task id
        '401':
          description: Invalid token
  "/api/v1/tasks/{id}/set_deadline":
    put:
      summary: Set task deadline
      tags:
      - Task
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        description: Access token
        schema:
          type: string
      - name: id
        in: path
        schema:
          type: integer
          example: 11
        required: true
      responses:
        '200':
          description: Task deadline updated
          content:
            application/json:
              example:
                data:
                  id: '342'
                  type: task
                  attributes:
                    name: sequi
                    created_at: '2022-07-23T23:30:03.330+03:00'
                    updated_at: '2022-07-23T23:30:03.330+03:00'
                    status: in_progress
                    position: 1
                    deadline_date: 25/07/2022
                    deadline_time: '00:00'
        '404':
          description: Invalid task id
        '422':
          description: Invalid params
          content:
            application/json:
              example:
                errors:
                  status:
                  - The task is done. You can`t edit completed task.
                  deadline:
                  - The field is required.
                  - Deadline cann`t be in past
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - task
              properties:
                deadline:
                  type: string
                  example: '2022-07-23T23:29:59+03:00'
  "/api/v1/user":
    post:
      summary: Create user
      tags:
      - User
      security:
      - Bearer: {}
      parameters: []
      responses:
        '201':
          description: Created
          content:
            application/json:
              example:
                data:
                  id: '494'
                  type: user
                  attributes:
                    username: Delta Hyatt
                    created_at: '2022-07-23T23:30:04.001+03:00'
                    updated_at: '2022-07-23T23:30:04.001+03:00'
                  relationships:
                    projects:
                      data: []
        '422':
          description: User name already exists
          content:
            application/json:
              example:
                errors:
                  username:
                  - This login is already registered. Please, log in.
                  password:
                  - The field is required.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - user
              properties:
                user:
                  type: object
                  required:
                  - username
                  - password
                  - password_confirmation
                  properties:
                    username:
                      type: string
                      example: twannaxx
                    password:
                      type: string
                      example: qwerty12
                    password_confirmation:
                      type: string
                      example: qwerty12
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3000
