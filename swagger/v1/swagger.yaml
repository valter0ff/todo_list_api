---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/current_user":
    get:
      summary: Show current user
      tags:
      - Current user
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        description: Access token
        schema:
          type: string
      responses:
        '200':
          description: Current user is returned
        '401':
          description: Invalid token
  "/api/v1/projects":
    post:
      summary: Create project
      tags:
      - Project
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        description: Access token
        schema:
          type: string
      responses:
        '201':
          description: Project is created
        '422':
          description: Project title already exists
        '401':
          description: Invalid token
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - project
              properties:
                title:
                  type: string
                  example: maxime
  "/api/v1/projects/{id}":
    put:
      summary: Update project
      tags:
      - Project
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        description: Access token
        schema:
          type: string
      - name: id
        in: path
        schema:
          type: integer
          example: 67
        required: true
      responses:
        '200':
          description: Project is updated
        '404':
          description: Invalid id
        '422':
          description: Project title already exists
        '401':
          description: Invalid token
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - project
              properties:
                title:
                  type: string
                  example: sit
    delete:
      summary: Destroy project
      tags:
      - Project
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        description: Access token
        schema:
          type: string
      - name: id
        in: path
        schema:
          type: integer
          example: 13
        required: true
      responses:
        '204':
          description: Project is destroyed
        '404':
          description: Invalid id
        '401':
          description: Invalid token
  "/api/v1/session":
    post:
      summary: Create session
      tags:
      - Sessions
      security:
      - Bearer: {}
      parameters: []
      responses:
        '201':
          description: Session is created
        '404':
          description: Not found
        '401':
          description: Invalid credentials
        '422':
          description: Blank username and password
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - username
              - password
              properties:
                username:
                  type: string
                  example: lissaxx
                password:
                  type: string
                  example: qwerty12
    delete:
      summary: Destroys session
      tags:
      - Sessions
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        description: Access token
        schema:
          type: string
      responses:
        '204':
          description: Session is destroyed
        '401':
          description: Invalid token
  "/api/v1/projects/{project_id}/tasks":
    get:
      summary: Project tasks index
      tags:
      - Task
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        description: Access token
        schema:
          type: string
      - name: project_id
        in: path
        schema:
          type: integer
          example: 14
        required: true
      responses:
        '200':
          description: Project tasks returned
        '404':
          description: Invalid project id
    post:
      summary: Create task
      tags:
      - Task
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        description: Access token
        schema:
          type: string
      - name: project_id
        in: path
        schema:
          type: integer
          example: 14
        required: true
      responses:
        '201':
          description: Task is created
        '422':
          description: Invalid task name
        '404':
          description: Invalid project id
        '401':
          description: Invalid token
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - task
              properties:
                name:
                  type: string
                  example: eos
  "/api/v1/tasks/{id}/is_done":
    put:
      summary: Update task status
      tags:
      - Task
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        description: Access token
        schema:
          type: string
      - name: id
        in: path
        schema:
          type: integer
          example: 14
        required: true
      responses:
        '200':
          description: Task status changed
        '404':
          description: Invalid task id
  "/api/v1/tasks/{id}":
    put:
      summary: Update task
      tags:
      - Task
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        description: Access token
        schema:
          type: string
      - name: id
        in: path
        schema:
          type: integer
          example: 44
        required: true
      responses:
        '200':
          description: Task updated
        '404':
          description: Invalid task id
        '422':
          description: Task already completed
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - task
              properties:
                name:
                  type: string
                  example: excepturi
  "/api/v1/user":
    post:
      summary: Create user
      tags:
      - User
      security:
      - Bearer: {}
      parameters: []
      responses:
        '201':
          description: Created
        '422':
          description: User name already exists
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - user
              properties:
                user:
                  type: object
                  required:
                  - username
                  - password
                  - password_confirmation
                  properties:
                    username:
                      type: string
                      example: haexx
                    password:
                      type: string
                      example: qwerty12
                    password_confirmation:
                      type: string
                      example: qwerty12
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: www.example.com
