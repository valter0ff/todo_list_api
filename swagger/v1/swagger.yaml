---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/tasks/{task_id}/comments":
    get:
      summary: Task comments index
      tags:
      - Comment
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        description: Access token
        schema:
          type: string
      - name: task_id
        in: path
        schema:
          type: integer
          example: 56
        required: true
      responses:
        '200':
          description: Task comments returned
          content:
            application/json:
              examples:
                Task comments returned:
                  value:
                    data:
                    - id: '213'
                      type: comment
                      attributes:
                        body: Elda Monahan
                        created_at: '2022-07-25T22:53:55.983+03:00'
                        updated_at: '2022-07-25T22:53:55.983+03:00'
                    - id: '214'
                      type: comment
                      attributes:
                        body: Richard Gleason
                        created_at: '2022-07-25T22:53:55.986+03:00'
                        updated_at: '2022-07-25T22:53:55.986+03:00'
        '404':
          description: Invalid task id
        '401':
          description: Invalid token
    post:
      summary: Create comment
      tags:
      - Comment
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        description: Access token
        schema:
          type: string
      - name: task_id
        in: path
        schema:
          type: integer
          example: 49
        required: true
      responses:
        '201':
          description: Comment is created
          content:
            application/json:
              examples:
                Comment is created:
                  value:
                    data:
                      id: '219'
                      type: comment
                      attributes:
                        body: Naoma Bashirian
                        created_at: '2022-07-25T22:53:56.769+03:00'
                        updated_at: '2022-07-25T22:53:56.769+03:00'
        '422':
          description: Invalid comment body
          content:
            application/json:
              examples:
                Invalid comment body:
                  value:
                    errors:
                      body:
                      - must be filled
        '404':
          description: Invalid task id
        '401':
          description: Invalid token
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - comment
              properties:
                body:
                  type: string
                  example: Manie Reilly
  "/api/v1/comments/{id}":
    delete:
      summary: Delete comment
      tags:
      - Comment
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        description: Access token
        schema:
          type: string
      - name: id
        in: path
        schema:
          type: integer
          example: 28
        required: true
      responses:
        '204':
          description: Comment destroyed
        '404':
          description: Invalid comment id
        '401':
          description: Invalid token
  "/api/v1/current_user":
    get:
      summary: Show current user
      tags:
      - Current user
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        description: Access token
        schema:
          type: string
      responses:
        '200':
          description: Current user is returned
          content:
            application/json:
              examples:
                Current user is returned:
                  value:
                    data:
                      id: '1200'
                      type: user
                      attributes:
                        username: Laurine Waters
                        created_at: '2022-07-25T22:53:57.326+03:00'
                        updated_at: '2022-07-25T22:53:57.326+03:00'
                      relationships:
                        projects:
                          data: []
        '401':
          description: Invalid token
  "/api/v1/projects":
    post:
      summary: Create project
      tags:
      - Project
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        description: Access token
        schema:
          type: string
      responses:
        '201':
          description: Project is created
          content:
            application/json:
              examples:
                Project is created:
                  value:
                    data:
                      id: '936'
                      type: project
                      attributes:
                        title: sit
                        created_at: '2022-07-25T22:53:57.466+03:00'
                        updated_at: '2022-07-25T22:53:57.466+03:00'
        '422':
          description: Invalid parameters
          content:
            application/json:
              examples:
                when title is invalid:
                  value:
                    errors:
                      title:
                      - The field is required.
                when project with provided title already exists:
                  value:
                    errors:
                      title:
                      - The project with such name does already exist.
        '401':
          description: Invalid token
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - project
              properties:
                title:
                  type: string
                  example: cum
  "/api/v1/projects/{id}":
    put:
      summary: Update project
      tags:
      - Project
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        description: Access token
        schema:
          type: string
      - name: id
        in: path
        schema:
          type: integer
          example: 24
        required: true
      responses:
        '200':
          description: Project is updated
          content:
            application/json:
              examples:
                Project is updated:
                  value:
                    data:
                      id: '938'
                      type: project
                      attributes:
                        title: Tiffany Kilback
                        created_at: '2022-07-25T22:53:57.773+03:00'
                        updated_at: '2022-07-25T22:53:57.801+03:00'
        '404':
          description: Invalid project id
        '422':
          description: Project title already exists
          content:
            application/json:
              examples:
                Project title already exists:
                  value:
                    errors:
                      title:
                      - The project with such name does already exist.
        '401':
          description: Invalid token
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - project
              properties:
                title:
                  type: string
                  example: porro
    delete:
      summary: Destroy project
      tags:
      - Project
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        description: Access token
        schema:
          type: string
      - name: id
        in: path
        schema:
          type: integer
          example: 85
        required: true
      responses:
        '204':
          description: Project is destroyed
        '404':
          description: Invalid id
        '401':
          description: Invalid token
  "/api/v1/session":
    post:
      summary: Create session
      tags:
      - Sessions
      security:
      - Bearer: {}
      parameters: []
      responses:
        '201':
          description: Session is created
          content:
            application/json:
              examples:
                Session is created:
                  value:
                    data:
                      id: '1211'
                      type: user
                      attributes:
                        username: Hoa Shields
                        created_at: '2022-07-25T22:53:58.153+03:00'
                        updated_at: '2022-07-25T22:53:58.153+03:00'
                      relationships:
                        projects:
                          data:
                          - id: '944'
                            type: project
                          - id: '945'
                            type: project
                    meta:
                      csrf: ezcm9fcoYVgBcNWbpW8+O5rfGzKjDT6CSNQ0mIo7F/SYbQRl5find/FaU9usJCIpZxYwdbx0v3WoEntaz/x/mg==
                      access: eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2NTg4MTQ4MzgsInVzZXJfaWQiOjEyMTEsInVpZCI6IjM5MmMzOTlkLWEwN2YtNDBlOC05Njk3LTIyNjY3MzQ5ODczMCIsInJ1aWQiOiI2ODNhZTAwNS02NjY4LTRkMGEtYmQ0Ny1hYWUzMzVkMjIwMzYifQ.ZYTJo7cMltjpoEZeF_iZ771oXrX0kdkJMJ0FYmQm9h0
                      access_expires_at: '2022-07-26T08:53:58.000+03:00'
                      refresh: eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2NTkzODM2MzgsInVpZCI6IjY4M2FlMDA1LTY2NjgtNGQwYS1iZDQ3LWFhZTMzNWQyMjAzNiJ9.Hr8ubyv3MTPaMKUKyfD-Wxjjgy8TEJwaXYMcvCT45p4
                      refresh_expires_at: '2022-08-01T22:53:58.000+03:00'
                    included:
                    - id: '944'
                      type: project
                      attributes:
                        title: Joyce Simonis
                        created_at: '2022-07-25T22:53:58.158+03:00'
                        updated_at: '2022-07-25T22:53:58.158+03:00'
                    - id: '945'
                      type: project
                      attributes:
                        title: Ileana Mohr
                        created_at: '2022-07-25T22:53:58.163+03:00'
                        updated_at: '2022-07-25T22:53:58.163+03:00'
        '404':
          description: Not found
        '401':
          description: Invalid credentials
          content:
            application/json:
              examples:
                Invalid credentials:
                  value:
                    errors:
                      base: Incorrect login or(and) password
        '422':
          description: Blank username and password
          content:
            application/json:
              examples:
                Blank username and password:
                  value:
                    errors:
                      username:
                      - The field is required.
                      password:
                      - The field is required.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - username
              - password
              properties:
                username:
                  type: string
                  example: gerard.kassulkexx
                password:
                  type: string
                  example: qwerty12
    delete:
      summary: Destroys session
      tags:
      - Sessions
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        description: Access token
        schema:
          type: string
      responses:
        '204':
          description: Session is destroyed
        '401':
          description: Invalid token
  "/api/v1/projects/{project_id}/tasks":
    get:
      summary: Project tasks index
      tags:
      - Task
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        description: Access token
        schema:
          type: string
      - name: project_id
        in: path
        schema:
          type: integer
          example: 35
        required: true
      responses:
        '200':
          description: Project tasks returned
          content:
            application/json:
              examples:
                Project tasks returned:
                  value:
                    data:
                    - id: '906'
                      type: task
                      attributes:
                        name: ipsum
                        created_at: '2022-07-25T22:53:58.500+03:00'
                        updated_at: '2022-07-25T22:53:58.500+03:00'
                        status: in_progress
                        position: 1
                        deadline_date: 01/08/2022
                        deadline_time: '00:00'
                    - id: '907'
                      type: task
                      attributes:
                        name: facere
                        created_at: '2022-07-25T22:53:58.506+03:00'
                        updated_at: '2022-07-25T22:53:58.506+03:00'
                        status: in_progress
                        position: 2
                        deadline_date: 01/08/2022
                        deadline_time: '00:00'
        '404':
          description: Invalid project id
        '401':
          description: Invalid token
    post:
      summary: Create task
      tags:
      - Task
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        description: Access token
        schema:
          type: string
      - name: project_id
        in: path
        schema:
          type: integer
          example: 37
        required: true
      responses:
        '201':
          description: Task is created
          content:
            application/json:
              examples:
                Task is created:
                  value:
                    data:
                      id: '912'
                      type: task
                      attributes:
                        name: corrupti
                        created_at: '2022-07-25T22:53:58.758+03:00'
                        updated_at: '2022-07-25T22:53:58.758+03:00'
                        status: in_progress
                        position: 3
        '422':
          description: Invalid task name
          content:
            application/json:
              examples:
                Invalid task name:
                  value:
                    errors:
                      name:
                      - The field is required.
        '404':
          description: Invalid project id
        '401':
          description: Invalid token
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - task
              properties:
                name:
                  type: string
                  example: assumenda
  "/api/v1/tasks/{id}/is_done":
    put:
      summary: Update task status
      tags:
      - Task
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        description: Access token
        schema:
          type: string
      - name: id
        in: path
        schema:
          type: integer
          example: 52
        required: true
      responses:
        '200':
          description: Task status changed
          content:
            application/json:
              examples:
                Task status changed:
                  value:
                    data:
                      id: '917'
                      type: task
                      attributes:
                        name: nulla
                        created_at: '2022-07-25T22:53:59.065+03:00'
                        updated_at: '2022-07-25T22:53:59.102+03:00'
                        status: done
                        position: 1
                        deadline_date: 01/08/2022
                        deadline_time: '00:00'
        '404':
          description: Invalid task id
        '401':
          description: Invalid token
  "/api/v1/tasks/{id}":
    put:
      summary: Update task
      tags:
      - Task
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        description: Access token
        schema:
          type: string
      - name: id
        in: path
        schema:
          type: integer
          example: 36
        required: true
      responses:
        '200':
          description: Task updated
          content:
            application/json:
              examples:
                Task updated:
                  value:
                    data:
                      id: '923'
                      type: task
                      attributes:
                        name: Jorge Bashirian
                        created_at: '2022-07-25T22:53:59.290+03:00'
                        updated_at: '2022-07-25T22:53:59.340+03:00'
                        status: in_progress
                        position: 96
                        deadline_date: 01/08/2022
                        deadline_time: '00:00'
        '404':
          description: Invalid task id
        '422':
          description: Invalid parameters
          content:
            application/json:
              examples:
                when blank position parameter:
                  value:
                    errors:
                      position:
                      - must be filled
                when task already completed:
                  value:
                    errors:
                      status:
                      - The task is done. You can`t edit completed task.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - task
              properties:
                name:
                  type: string
                  example: quas
                position:
                  type: integer
                  example: 87
    delete:
      summary: Delete task
      tags:
      - Task
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        description: Access token
        schema:
          type: string
      - name: id
        in: path
        schema:
          type: integer
          example: 21
        required: true
      responses:
        '204':
          description: Task destroyed
        '404':
          description: Invalid task id
        '401':
          description: Invalid token
  "/api/v1/tasks/{id}/set_deadline":
    put:
      summary: Set task deadline
      tags:
      - Task
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        description: Access token
        schema:
          type: string
      - name: id
        in: path
        schema:
          type: integer
          example: 19
        required: true
      responses:
        '200':
          description: Task deadline updated
          content:
            application/json:
              examples:
                Task deadline updated:
                  value:
                    data:
                      id: '930'
                      type: task
                      attributes:
                        name: nostrum
                        created_at: '2022-07-25T22:53:59.719+03:00'
                        updated_at: '2022-07-25T22:53:59.719+03:00'
                        status: in_progress
                        position: 1
                        deadline_date: 01/08/2022
                        deadline_time: '00:00'
        '404':
          description: Invalid task id
        '422':
          description: Invalid params
          content:
            application/json:
              examples:
                when task already completed:
                  value:
                    errors:
                      status:
                      - The task is done. You can`t edit completed task.
                when blank deadline parameter:
                  value:
                    errors:
                      deadline:
                      - The field is required.
                      - Deadline cann`t be in past
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - task
              properties:
                deadline:
                  type: string
                  example: '2022-07-25T22:53:54+03:00'
  "/api/v1/user":
    post:
      summary: Create user
      tags:
      - User
      security:
      - Bearer: {}
      parameters: []
      responses:
        '201':
          description: Created
          content:
            application/json:
              examples:
                Created:
                  value:
                    data:
                      id: '1235'
                      type: user
                      attributes:
                        username: Gita Strosin
                        created_at: '2022-07-25T22:54:00.307+03:00'
                        updated_at: '2022-07-25T22:54:00.307+03:00'
                      relationships:
                        projects:
                          data: []
        '422':
          description: User name already exists
          content:
            application/json:
              examples:
                Invalid params:
                  value:
                    errors:
                      username:
                      - The field is required.
                      password:
                      - The field is required.
                User name already exists:
                  value:
                    errors:
                      username:
                      - This login is already registered. Please, log in.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - user
              properties:
                user:
                  type: object
                  required:
                  - username
                  - password
                  - password_confirmation
                  properties:
                    username:
                      type: string
                      example: miguel_hirthexx
                    password:
                      type: string
                      example: qwerty12
                    password_confirmation:
                      type: string
                      example: qwerty12
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3000
